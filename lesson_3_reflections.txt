Question:
When would you want to use a remote repository rather than keeping all your work local?

Answer:
I'd want to use a remote repository for a few reasons! Firstly, when I'm working on a project with other users, it's helpful to have my files saved on a remote repository. Secondly, having a remote repository makes it easier to work on files between multiple computers (perhaps a work computer and a personal computer!).

Question:
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Answer:
You might want to always pull changes manually because you might be working on code that references a previous branch. As well, if Git automatically stayed up-to-date, it might be possible that new code would be introduced without knowing it, adding to confusion and adding in disruptions to your coding flow.

Question:
Describe the differences between forks, clones, and branches. When would you use one instead of another?

Answer:
Forks - this is a way to clone projects through GitHub and attribute credit and an origin to the original person. I would use this over cloning most likely the majority of the time.
Clones - this is a way to duplicate a project and its commit history. If I'm interacting with code outside of GitHub, I'd likely simply clone the project.
Branches - branches are deviations of the code from a master (or another) primary history of code. Branching out allows me to add features and try experimental things without risking the code history. I'd likely branch code all the time!

Question:
What is the benefit of having a copy of the last known state of the remote stored locally?

Answer:
The benefit is that you have the latest, most up-to-date code available to you while you're working on your code. This allows you to avoid big code reviews in the future where a significant amount of differences exist between your local copy and the master branch. 
